# Dockerfile using UBI9 for vLLM on s390x architecture with dependencies, PyTorch, torchvision, and Apache Arrow

FROM registry.access.redhat.com/ubi9/ubi
USER root

RUN dnf install -y --setopt=install_weak_deps=False --setopt=tsflags=nodocs \
    python3 python3-pip python3-devel python3-setuptools python3-wheel \
    meson pyproject-rpm-macros \
    git wget numactl cmake ninja-build cargo \
    protobuf protobuf-c protobuf-lite \
    clang llvm llvm-devel \
    libjpeg-turbo-devel libpng-devel zlib-devel libtiff-devel \
    libwebp-devel openssl-devel openblas openblas-devel \
    boost-devel libzstd-devel lz4-devel snappy-devel \
    pkgconf-pkg-config bzip2-devel numactl-devel libsndfile \
    libSM-devel libXext-devel orc-devel patch \
    --allowerasing && dnf clean all


RUN dnf update -y python3-pip && \
    python3 -m pip install --upgrade pip wheel && \
    python3 -m pip install --upgrade "setuptools==68.0.0" "setuptools-scm" \
    "meson" "meson-python" "pyproject-metadata"

RUN curl https://sh.rustup.rs -sSf | sh -s -- -y && \
    . "$HOME/.cargo/env"

WORKDIR /tmp/arrow
RUN git clone https://github.com/apache/arrow.git && \
    cd arrow/cpp && \
    mkdir release && cd release && \
    cmake -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX=/usr/local \
          -DARROW_PYTHON=ON \
          -DARROW_PARQUET=ON \
          -DARROW_ORC=ON \
          -DARROW_FILESYSTEM=ON \
          -DARROW_WITH_LZ4=ON \
          -DARROW_WITH_ZSTD=ON \
          -DARROW_WITH_SNAPPY=ON \
          -DARROW_JSON=ON \
          -DARROW_CSV=ON \
          -DPROTOBUF_PROTOC_EXECUTABLE=/usr/bin/protoc \
          -DARROW_DEPENDENCY_SOURCE=BUNDLED \
          .. && \
    make -j$(nproc) && make install


ENV CMAKE_PREFIX_PATH=/usr/local/lib/cmake:$CMAKE_PREFIX_PATH
ENV LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH

RUN git clone --recursive https://github.com/pytorch/pytorch.git && \
    cd pytorch && \
    git checkout v2.5.1 && \
    git submodule sync && \
    git submodule update --init --recursive && \
    pip install -r requirements.txt && \
    python3 setup.py bdist_wheel && \
    pip install dist/*.whl && \
    mkdir -p /workspace/dist-pytorch && \
    cp dist/*.whl /workspace/dist-pytorch

RUN git clone https://github.com/pytorch/vision.git && \
    cd vision && \
    git checkout 48b1edf && \
    python3 setup.py bdist_wheel && \
    pip install --no-cache-dir dist/*.whl && \
    rm -rf dist

COPY . /workspace/vllm
WORKDIR /workspace/vllm

RUN dnf remove -y python3-requests

RUN pip install --no-cache-dir -v \
        'cmake>=3.26' ninja packaging 'setuptools-scm>=8' wheel jinja2 \
        -r requirements-cpu.txt \
        xformers uvloop==0.21.0

RUN --mount=type=cache,target=/root/.cache/pip \
    --mount=type=cache,target=/root/.cache/ccache \
    VLLM_TARGET_DEVICE=cpu python3 setup.py build_ext --inplace && \
    VLLM_TARGET_DEVICE=cpu python3 setup.py bdist_wheel && \
    pip install --no-cache-dir dist/*.whl && \
    rm -rf dist

ENTRYPOINT ["/usr/bin/python3", "-m", "vllm.entrypoints.openai.api_server"]

